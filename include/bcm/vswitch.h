/*
 * 
 * This software is governed by the Broadcom Switch APIs license.
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenNSA/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */

#ifndef __BCM_VSWITCH_H__
#define __BCM_VSWITCH_H__

#include <bcm/types.h>
#include <bcm/policer.h>
#include <bcm/port.h>

/* Vswitch callback function prototype */
typedef int (*bcm_vswitch_port_traverse_cb)(
    int unit, 
    bcm_vlan_t vsi, 
    bcm_gport_t port, 
    void *user_data);

/* bcm_vswitch_cross_connect_* flags */
#define BCM_VSWITCH_CROSS_CONNECT_DIRECTIONAL 0x00000001 /* connect gport1 to
                                                          gport2 */

/* L3 tunneling initiator. */
typedef struct bcm_vswitch_cross_connect_s {
    bcm_gport_t port1;  /* First gport in cross connect. */
    bcm_gport_t port2;  /* Second gport in cross connect. */
    int encap1;         /* First gport encap id. */
    int encap2;         /* Second gport encap id. */
    uint32 flags;       /* BCM_VSWITCH_CROSS_CONNECT_XXX flags. */
} bcm_vswitch_cross_connect_t;

/* Initialize the bcm_vswitch_cross_connect_t struct. */
extern void bcm_vswitch_cross_connect_t_init(
    bcm_vswitch_cross_connect_t *cross_connect);

/* Vswitch callback function prototype */
typedef int (*bcm_vswitch_cross_connect_traverse_cb)(
    int unit, 
    bcm_vswitch_cross_connect_t *gports, 
    void *user_data);

/* bcm_vswitch_flexible_connect_* flags */
#define BCM_VSWITCH_FLEXIBLE_CONNECT_UPDATE 0x00000001 /* Update existing
                                                          connection */

/* Vswitch flexible cross connect forwarding information. */
typedef struct bcm_vswitch_flexible_connect_fwd_s {
    bcm_gport_t forward_port;   /* gport to be used as forward destination. */
    int forward_encap;          /* forward encap id */
} bcm_vswitch_flexible_connect_fwd_t;

/* Vswitch flexible cross connect match information. */
typedef struct bcm_vswitch_flexible_connect_match_s {
    bcm_port_match_t match;         /* Match criteria */
    bcm_gport_t match_port;         /* Match port */
    bcm_vlan_t match_vlan;          /* Match vlan */
    bcm_vlan_t match_inner_vlan;    /* Match inner vlan */
} bcm_vswitch_flexible_connect_match_t;

#endif /* __BCM_VSWITCH_H__ */
